#import java.util.List;
#
#import java.awt.*;
#import java.awt.image.*;
#
#import javax.imageio.*;
#
#import org.openscience.cdk.*;
#import org.openscience.cdk.interfaces.*;
#import org.openscience.cdk.layout.*;
#import org.openscience.cdk.renderer.*;
#import org.openscience.cdk.renderer.font.*;
#import org.openscience.cdk.renderer.generators.*;
#import org.openscience.cdk.renderer.visitor.*;
#import org.openscience.cdk.templates.*;
#

#IAtomContainer triazole = MoleculeFactory.make123Triazole();
#StructureDiagramGenerator sdg = new StructureDiagramGenerator();
#sdg.setMolecule(triazole);
#sdg.generateCoordinates();
#triazole = sdg.getMolecule();

// generators make the image elements
List<IGenerator> generators =
  new ArrayList<IGenerator>();
generators.add(new BasicSceneGenerator());
generators.add(new BasicBondGenerator());
generators.add(new BasicAtomGenerator());

#// the renderer needs to have a toolkit-specific font manager
#AtomContainerRenderer renderer =
#  new AtomContainerRenderer(generators, new AWTFontManager());

// dump all parameters
for (generator in renderer.generators) {
  for (parameter in generator.parameters) {
    println "parameter: " +
      parameter.class.name.substring(40) +
      " -> " +
      parameter.value;
  }
}
